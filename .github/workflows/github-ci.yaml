name: ci

on:
  push:
    branches:
      - 'tidy-actions'
env:
  SRC_FOLDER: "example.api"
  APP_NAME: "example-api"
  IMAGE_FILE: infra/manifests/lib/api.image.txt

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set GitHub short hash
      run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV

    - name: Print GitHub short hash
      run: echo "Short hash=$GITHUB_SHA_SHORT"

    - uses: actions/setup-node@v1
      name: Node.js
      with:
        node-version: 16
    
    - name: yarn build
      run: |
        cd ${GITHUB_WORKSPACE}/{{ env.SRC_FOLDER }}
        ls
        yarn
        yarn build
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Set Docker env variables
      run: | 
        echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> $GITHUB_ENV
        echo "DOCKER_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/{{ env.APP_NAME }}:${{ env.GITHUB_SHA_SHORT }}" >> $GITHUB_ENV
    
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: ./${{ env.SRC_FOLDER }}/
        push: true
        tags: ${{ env.DOCKERHUB_USERNAME }}/{{ env.APP_NAME }}:${{ env.GITHUB_SHA_SHORT }}

    - name: Write build image to file
      run: | 
        : > ${GITHUB_WORKSPACE}/${{ env.IMAGE_FILE }}
        echo ${{ env.DOCKER_IMAGE }} | xargs | tr -d '\n' > ${GITHUB_WORKSPACE}/${{ env.IMAGE_FILE }}
        cat ${GITHUB_WORKSPACE}/${{ env.IMAGE_FILE }}

    - name: Commit and push changes
      uses: devops-infra/action-commit-push@v0.3
      with:
        github_token: ${{ secrets.GIT_TOKEN }}
        commit_message: Version updated to ${{ env.GITHUB_SHA_SHORT }}