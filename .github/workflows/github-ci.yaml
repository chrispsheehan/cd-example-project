name: ci

on:
  push:
    branches:
      - 'main'
env:
  API_SRC_FOLDER: "example.api"
  API_APP_NAME: "example-api"
  IMAGE_FODER: infra/manifests/lib
  API_IMAGE_FILE: infra/manifests/lib/api.image.txt
  WEB_SRC_FOLDER: "example.website"
  WEB_APP_NAME: "example-website"
  WEB_IMAGE_FILE: infra/manifests/lib/website.image.txt

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      sha_short: ${{ steps.set_sha.outputs.GITHUB_SHA_SHORT }}
    steps:
    - uses: actions/checkout@v3
    - id: set_sha
      run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_OUTPUT

  build-api:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Build
      run: |
        cd ${GITHUB_WORKSPACE}/$API_SRC_FOLDER
        ls
        yarn
        yarn build
    
    # - name: Set up QEMU
    #   uses: docker/setup-qemu-action@v2
    
    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v2
    
    # - name: Login to Docker Hub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    # - name: Push 
    #   uses: docker/build-push-action@v3
    #   with:
    #     context: ./${{ env.API_SRC_FOLDER }}/
    #     push: true
    #     tags: "${{ secrets.DOCKERHUB_USERNAME }}/${{ env.API_APP_NAME }}:${{ needs.setup.outputs.sha_short }}"

    - name: Write build image to file
      run: | 
        : > ${GITHUB_WORKSPACE}/${{ env.API_IMAGE_FILE }}
        echo ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.API_APP_NAME }}:${{ needs.setup.outputs.sha_short }} | xargs | tr -d '\n' > ${GITHUB_WORKSPACE}/${{ env.API_IMAGE_FILE }}
        cat ${GITHUB_WORKSPACE}/${{ env.API_IMAGE_FILE }}

    - uses: actions/upload-artifact@master
      with:
        path: ${{ env.API_IMAGE_FILE }}

  build-web:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    
    - name: Build
      run: |
        cd ${GITHUB_WORKSPACE}/$WEB_SRC_FOLDER
        ls
        npm install
        npm install react-scripts
    
    # - name: Set up QEMU
    #   uses: docker/setup-qemu-action@v2
    
    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v2
    
    # - name: Login to Docker Hub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}

    # - name: Build and push 
    #   uses: docker/build-push-action@v3
    #   with:
    #     context: ./${{ env.WEB_SRC_FOLDER }}/
    #     push: true
    #     tags: "${{ secrets.DOCKERHUB_USERNAME }}/${{ env.WEB_APP_NAME }}:${{ needs.setup.outputs.sha_short }}"

    - name: Write build image to file
      run: | 
        : > ${GITHUB_WORKSPACE}/${{ env.WEB_IMAGE_FILE }}
        echo ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.WEB_APP_NAME }}:${{ needs.setup.outputs.sha_short }} | xargs | tr -d '\n' > ${GITHUB_WORKSPACE}/${{ env.WEB_IMAGE_FILE }}
        cat ${GITHUB_WORKSPACE}/${{ env.WEB_IMAGE_FILE }}

    - uses: actions/upload-artifact@master
      with:
        path: ${{ env.WEB_IMAGE_FILE }}

  commit-versions:
    needs: [ setup, build-web, build-api ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Delete web image file
      run: rm ${{ env.WEB_IMAGE_FILE }}

    - name: Delete api image file
      run: rm ${{ env.API_IMAGE_FILE }}

    - uses: actions/download-artifact@master
      with:
        path: ${{ env.IMAGE_FODER }}

    - name: ls libs
      run: ls ${{ env.IMAGE_FODER }}

    # - name: Commit and push changes
    #   uses: devops-infra/action-commit-push@v0.3
    #   with:
    #     github_token: ${{ secrets.GIT_TOKEN }}
    #     commit_message: Images version updated to ${{ needs.setup.outputs.sha_short }}